{"nodes":[{"name":"Applicationuser","group":13,"description":"<nobr>Package: entities</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to Person</nobr>","sourcecode":"package entities;\n\nimport java.io.Serializable;\nimport javax.persistence.Basic;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\nimport javax.xml.bind.annotation.XmlRootElement;\n\n@Entity\n@Table(name = \"APPLICATIONUSER\")\n@XmlRootElement\n@NamedQueries({\n    @NamedQuery(name = \"Applicationuser.findAll\", query = \"SELECT a FROM Applicationuser a\"),\n    @NamedQuery(name = \"Applicationuser.findById\", query = \"SELECT a FROM Applicationuser a WHERE a.id = :id\"),\n    @NamedQuery(name = \"Applicationuser.findByUsername\", query = \"SELECT a FROM Applicationuser a WHERE a.username = :username\"),\n    @NamedQuery(name = \"Applicationuser.findByEncryptedpwd\", query = \"SELECT a FROM Applicationuser a WHERE a.encryptedpwd = :encryptedpwd\")})\npublic class Applicationuser implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @Basic(optional = false)\n    @NotNull\n    @Column(name = \"ID\")\n    private Integer id;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 20)\n    @Column(name = \"USERNAME\")\n    private String username;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 50)\n    @Column(name = \"ENCRYPTEDPWD\")\n    private String encryptedpwd;\n    @JoinColumn(name = \"PERSONID\", referencedColumnName = \"ID\")\n    @ManyToOne(optional = false)\n    private Person personid;\n\n    public Applicationuser() {\n    }\n\n    public Applicationuser(Integer id) {\n        this.id = id;\n    }\n\n    public Applicationuser(Integer id, String username, String encryptedpwd) {\n        this.id = id;\n        this.username = username;\n        this.encryptedpwd = encryptedpwd;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getEncryptedpwd() {\n        return encryptedpwd;\n    }\n\n    public void setEncryptedpwd(String encryptedpwd) {\n        this.encryptedpwd = encryptedpwd;\n    }\n\n    public Person getPersonid() {\n        return personid;\n    }\n\n    public void setPersonid(Person personid) {\n        this.personid = personid;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 0;\n        hash += (id != null ? id.hashCode() : 0);\n        return hash;\n    }\n\n    @Override\n    public boolean equals(Object object) {\n        // TODO: Warning - this method won't work in the case the id fields are not set\n        if (!(object instanceof Applicationuser)) {\n            return false;\n        }\n        Applicationuser other = (Applicationuser) object;\n        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return \"entities.Applicationuser[ id=\" + id + \" ]\";\n    }\n    \n}\n","id":0},{"name":"Person","group":13,"description":"<nobr>Package: entities</nobr><br/><br/>One to many relations:<br/><nobr>One to many relation to Applicationuser</nobr>","sourcecode":"package entities;\n\nimport java.io.Serializable;\nimport java.util.Collection;\nimport javax.persistence.Basic;\nimport javax.persistence.CascadeType;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlTransient;\n\n@Entity\n@Table(name = \"PERSON\")\n@XmlRootElement\n@NamedQueries({\n    @NamedQuery(name = \"Person.findAll\", query = \"SELECT p FROM Person p\"),\n    @NamedQuery(name = \"Person.findById\", query = \"SELECT p FROM Person p WHERE p.id = :id\"),\n    @NamedQuery(name = \"Person.findByVorname\", query = \"SELECT p FROM Person p WHERE p.vorname = :vorname\"),\n    @NamedQuery(name = \"Person.findByNachname\", query = \"SELECT p FROM Person p WHERE p.nachname = :nachname\")})\npublic class Person implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @Basic(optional = false)\n    @NotNull\n    @Column(name = \"ID\")\n    private Integer id;\n    @Size(max = 50)\n    @Column(name = \"VORNAME\")\n    private String vorname;\n    @Size(max = 50)\n    @Column(name = \"NACHNAME\")\n    private String nachname;\n    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"personid\")\n    private Collection&lt;Applicationuser&gt; applicationuserCollection;\n\n    public Person() {\n    }\n\n    public Person(Integer id) {\n        this.id = id;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getVorname() {\n        return vorname;\n    }\n\n    public void setVorname(String vorname) {\n        this.vorname = vorname;\n    }\n\n    public String getNachname() {\n        return nachname;\n    }\n\n    public void setNachname(String nachname) {\n        this.nachname = nachname;\n    }\n\n    @XmlTransient\n    public Collection&lt;Applicationuser&gt; getApplicationuserCollection() {\n        return applicationuserCollection;\n    }\n\n    public void setApplicationuserCollection(Collection&lt;Applicationuser&gt; applicationuserCollection) {\n        this.applicationuserCollection = applicationuserCollection;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 0;\n        hash += (id != null ? id.hashCode() : 0);\n        return hash;\n    }\n\n    @Override\n    public boolean equals(Object object) {\n        // TODO: Warning - this method won't work in the case the id fields are not set\n        if (!(object instanceof Person)) {\n            return false;\n        }\n        Person other = (Person) object;\n        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return \"entities.Person[ id=\" + id + \" ]\";\n    }\n    \n}\n","id":1}],"links":[{"source":1,"target":0,"value":1,"type":"ONE_TO_MANY"},{"source":0,"target":1,"value":1,"type":"MANY_TO_ONE"}]}
